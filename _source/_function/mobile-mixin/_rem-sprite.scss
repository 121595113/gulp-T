@mixin rem-sprite-width($sprite, $base-value:$rem-base) {
    width: rem-calc(nth($sprite, 5), $base-value);
}

@mixin rem-sprite-height($sprite, $base-value:$rem-base) {
    height: rem-calc(nth($sprite, 6), $base-value);
}

@mixin rem-sprite-position($sprite, $base-value:$rem-base) {
    $sprite-offset-x: strip-unit(nth($sprite, 3)) / (strip-unit(nth($sprite, 5)) - strip-unit(nth($sprite, 7))) * 100%;
    $sprite-offset-y: strip-unit(nth($sprite, 4)) / (strip-unit(nth($sprite, 6)) - strip-unit(nth($sprite, 8))) * 100%;
    background-position: $sprite-offset-x $sprite-offset-y;
}

@mixin rem-sprite-image($sprite) {
    $sprite-image: nth($sprite, 9);
    background-image: url(#{$sprite-image});
}

@mixin rem-sprite-size($sprite, $base-value:$rem-base) {
    $sprite-width: nth($sprite, 7);
    $sprite-height: nth($sprite, 8);
    background-size: rem-calc($sprite-width $sprite-height, $base-value);
}

@mixin rem-sprite($sprite, $base-value:$rem-base, $repeat:true, $expand:false) {
    @if $expand == false {
        @include rem-sprite-image($sprite);
        @include rem-sprite-size($sprite, $base-value);
    }
    @include rem-sprite-position($sprite, $base-value);
    @include rem-sprite-width($sprite, $base-value);
    @include rem-sprite-height($sprite, $base-value);
    @if $repeat==true and $expand == false{
        background-repeat: no-repeat;
    }
}


/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/

@mixin rem-sprites($sprites, $base-value:$rem-base, $separator:'-', $pre-name:null, $repeat:true, $expand:false) {
    @if $pre-name==null {
        $pre-name: nth(nth($sprites, 1), 11);
    }
    @if $expand == true {
        .#{$pre-name+$separator}sprites{
            @include rem-sprite-image(nth($sprites, 1));
            @include rem-sprite-size(nth($sprites, 1), $base-value);
            @if $repeat == true {
                background-repeat: no-repeat;
            }
        }
    }
    @each $sprite in $sprites {
        $sprite-name: nth($sprite, 10);
        .#{$pre-name+$separator+$sprite-name} {
            @include rem-sprite($sprite, $base-value, $repeat, $expand);
        }
    }
}
